#!/usr/bin/env bash
# Copyright 2017 Maximilian Huber <oss@maximilian-huber.de>
# SPDX-License-Identifier: MIT

THIS_DIR="$(dirname "$(readlink -f "${BASH_SOURCE[0]}")")"

case $1 in
    unraw)
        shift
        time "$THIS_DIR/convertFromRaw.sh" $@
        ;;
    align)
        shift
        time "$THIS_DIR/alignImages.sh" $@
        ;;
    stack)
        shift
        time "$THIS_DIR/focusStackImages.sh" $@
        ;;
    # both)
    #     shift
    #     time "$THIS_DIR/focusStackImages.sh" $("$THIS_DIR/alignImages.sh" $@)
    #     ;;
    crop)
        shift
        time "$THIS_DIR/cropImages.sh" $@
        ;;
    init)
        shift
        time "$THIS_DIR/initFotoDir.sh" $@
        ;;
    scale)
        shift
        time "$THIS_DIR/scale-images-for-web.sh" $@
        ;;
    gallery)
        shift
        time "$THIS_DIR/buildSimpleGallery.sh" $@
        ;;
    rename)
        shift
        "$THIS_DIR/rename.sh" $@
        ;;
    info)
        shift
        "$THIS_DIR/mkInfoJSON.sh" $@
        ;;
    *)
        cat<<EOF
usage:
  init [dirToImport]
    create my default folder structure and optionally import files which were shot in the last 24h

  unraw ... [raws]
    convert RAW images to 48-bit TIFFs

  align ... [imgs]
    align multiple images via hugin

  stack ... [imgs]
    focus stack (possibly aligned) images via enfuse

  # both ... [imgs]
  #   this should align and than focus stack
  #   TODO: the arguments should be passed to stack, not only align

  crop ... [imgs]
    crop a bunch of images

  scale [imgs]
    scale images for easy upload to chat

  gallery [imgs]
    create a simple html gallery via fgallery command line tool

  rename [imgs]
    rename a jpg to my naming scheme

  info img [srcImg]
    generate json that describes the generated file

example workflow for focus stacking:
  $0 init /media/mmcblk0p1/DCIM/117MSDCF
  $0 unraw <subset of imported raw files>
  $0 align <resulting files from unraw>
  $0 stack <resulting files from align>
EOF
        ;;
esac
