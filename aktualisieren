#!/bin/bash

# Written by Maximilian-Huber.de
#
# Last modified: Fri Apr 03, 2015  01:41

###############################################################################
# variables
USER="$(whoami)"
HOST="$(hostname)"
echo $HOST
[[ $HOST == "x230" || $HOST == "t450s" ]] && {
  FOLDER="/home/${USER}/myconfig/"
} || {
  [[ $HOST == "udoo" ]] && {
    FOLDER="/home/${USER}/myconfig/UDOO/"
  } || {
    exit 0
  }
}
ASIMFile="${FOLDER}/asimilate"

###############################################################################
# asimilate
asimilate() {
  cat <<ASIMILATE
#!/bin/bash
#
# generated by ./aktualisieren
if [ "\$(id -u)" != "0" ]; then
  exit 1
fi

echo "you should:"
echo "$ ln -s \$MYCONFIGDIR/vim/bundle ~/.vim/bundle"

FOLDER="\$( cd "\$( dirname "\${BASH_SOURCE[0]}" )" && pwd )/"
myinstall(){
  # \$1: src path
  # \$2: dest path
  # \$3: perms
  # \$4: owner
  # \$5: group
  read -r -p "\$2? [y/N] " response
  response=\${response,,}
  if [[ \$response =~ ^(yes|y)$ ]]; then
    install -D --mode=\$3 --owner=\$4 --group=\$5 \$1 \$2
  fi
}
ASIMILATE
}
asimilate>$ASIMFile
chmod +x $ASIMFile
git add $ASIMFile

###############################################################################
# files to sync
files() {
  [[ $HOST == "x230" || $HOST == "t450s" ]] && {
    cat <<X230FILES
~/.Xresources
~/.aliasrc
~/.asoundrc.default
~/.asoundrc.hdmi-connected
~/.asoundrc.uca202
~/.bash_profile
~/.bashrc
#~/.cabal/config
~/.config/dwb/default/custom_keys
~/.config/dwb/userscripts/gitClone.sh
~/.config/dwb/userscripts/open-chromium.sh
~/.config/dwb/userscripts/wget-file.sh
~/.config/ranger/rc.conf
~/.config/ranger/rifle.conf
#~/.config/llpp.conf
~/.emacs
~/.fontconfig/fonts.conf
~/.ghci
~/.gnupg/gpg.conf
~/.gitconfig
~/.inputrc
~/.latexmkrc
~/.mutt/mutt-colors
~/.muttrc
~/.ncmpcpp/config
~/.tmux.conf
~/.vimencrypt
~/.vimrc
~/.vim/autoload
~/.vim/colors
~/.vim/ftdetect
~/.vim/ftplugin
~/.vim/indent
~/.vim/plugin
~/.vim/syntax
~/.vim/snippets
~/.vim/plugin/myLastModified.vim
~/.vim/plugin/grep-operator.vim
~/.xinitrc
~/.xmonad/myinformation.sh
~/.xmonad/mymailinfo.sh
~/.xmonad/showkeys
~/.xmonad/tmux-scratch.sh
~/.xmonad/xmobarrc
~/.xmonad/xmonad.hs
~/.zlogin
~/.zshrc.local
~/.zshrc.z
~/.zprofile
~/.xmodmap
~/bin/create_ap
~/bin/disp-controll
~/bin/gitWalk
~/bin/installiere_neo
~/bin/mailclient.sh
~/bin/mailrun.sh
~/bin/myAnyToMp3.sh
~/bin/myCleanDownloads.sh
~/bin/myEcryptfsMount.sh
~/bin/myPdfCrop.sh
~/bin/myScalaToScript.sh
~/bin/myTexWrapper.sh
~/bin/myThesausrus.sh
~/bin/myautosetup.sh
~/bin/mycrypt
~/bin/myfsize.sh
~/bin/myfullbackup.sh
~/bin/mylayouttoggle.sh
~/bin/mystopwatch
~/bin/ncChat.sh
~/bin/nmgui
~/bin/remove_spaces.sh
~/bin/rip_gapless.sh
~/bin/runNL.sh
~/bin/runQEMU.sh
~/bin/stolen/
/etc/X11/xorg.conf.d/*.conf
/etc/fstab
/etc/hosts
/etc/locale.conf
/etc/lvm/lvm.conf
/etc/makepkg.conf
/etc/mkinitcpio.conf
/etc/modprobe.d/*
/etc/pacman.conf
/etc/sysctl.d/99-sysctl.conf
/etc/systemd/system/getty@tty1.service.d/noclear.conf
/etc/systemd/system/ntpdate.service.d/hwclock.conf
/etc/systemd/system/tpacpi-bat-custom.service
/etc/udev/rules.d/*
/etc/vconsole.conf
/etc/vsftpd.conf
/etc/zathurarc
/etc/zsh/zshrc
/usr/share/kbd/keymaps/neo/*
/usr/share/zsh/functions/Completion/Haskell/*
X230FILES
  }
  [[ $HOST == "udoo" ]] && {
    cat <<UDOOFILES
~/bin/m3u-handler.sh
~/bin/pls-handler.sh
~/.config/beets/config.yaml
~/.ncmpcpp/config
~/.zprofile
/etc/asound.conf
/etc/mpd.conf
/etc/dnsmasq.conf
/etc/sysctl.d/90-inotify.conf
/etc/systemd/system/getty@tty1.service.d/autologin.conf
/etc/minidlna.conf
UDOOFILES
  }
}

###############################################################################
# function which syncs
mycopy(){
  for FILE in $*; do
    [[ ! $FILE == \#* ]] && {
      BASE=${FILE##*/}
      BASE=${BASE#.}
      [[ $BASE == *"*"* ]] && BASE=""
      DIR=""
      [[ $FILE == ~* ]] && {
        FILE=${FILE#\~}
        DIR=${FILE%/*}
        [[ $DIR != "" ]] && {
          DIR=${DIR#*/}"/"
          DIR=${DIR#.}
        }
        FILE="/home/${USER}"${FILE}
      } || {
        DIR=${FILE%/*}
        DIR=${DIR#*/}"/"
        DIR=${DIR#.}
      }

      #copy!
      mkdir -p "${FOLDER}${DIR}"
      if [ -f "$FILE"  ]; then
        #files
        cp -vu $FILE "${FOLDER}${DIR}${BASE}"
        perms=$( stat --format=%a $FILE )
        ownr=$(ls -l $FILE | awk '{ print $3 }') #<-- will give you the owner
        grp=$(ls -l $FILE | awk '{ print $4 }') #<-- will give you the group
        echo "myinstall \"\${FOLDER}${DIR}${BASE}\" \"$FILE\" $perms $ownr $grp" >>"$ASIMFile"
      elif [ -d "$FILE" ]; then
        #folders
        #echo $FILE
        rsync -az --delete $FILE "${FOLDER}${DIR}"
        echo "# \"\${FOLDER}${DIR}${BASE}\" \"$FILE\"" >>"$ASIMFile"
      else
        #others? There should be no others!
        echo "??? $FILE ???"
      fi
      git add "${FOLDER}${DIR}${BASE}"
    }
  done
}

###############################################################################
# run
echo "copy"
echo
files | while IFS= read -r LINE; do
  mycopy $LINE
done

###############################################################################
# GIT
echo
echo "git"
echo

pushd "$FOLDER"
git commit -a # -m "automatisch aktualisiert"

# check, if connected #####################################################
if ! ping -c1 cloud.github.com > /dev/null 2>&1; then
  echo "**** not connected (ping) ****"
  # check again ###########################################################
  if ! wget -O - cloud.github.com > /dev/null 2>&1; then
    echo "**** not connected (wget) ****"
    popd
    exit 1
  fi
fi

git push
